@model SMPhotos.Web.ViewModel.PictureVM
@{
    ViewBag.Title = "ImageLoad";
}
@Styles.Render("~/Content/loadImage/css")
@Styles.Render("~/Content/main/css")
@section ScriptLoad{
    @Scripts.Render("~/Scripts/imageLoad/js")
}

<div class="row content-center">
    <div class="col-sm-12 col-lg-12 col-md-12 col-xs-12">
        <h2>Uploading of images</h2>
    </div>
    <div class="toolbar" role="toolbar">
        <div class="btn-group pagination-centered">
            <a href="@Url.Action(MVCManager.Controller.Main.Albums, MVCManager.Controller.Main.Name)" title="Return to Albums">
                <button class="glyphicon glyphicon-arrow-left btn btn-default"></button>
            </a>
            @if (User.IsInRole("Uploader"))
            {
                <strong title="Add images">
                    <button class="glyphicon glyphicon-plus btn btn-disabled"></button>
                </strong>}
            <a href="@Url.Action(MVCManager.Controller.Main.Album, MVCManager.Controller.Main.Name, new { id = Model.Id})" title="View as grid">
                <button class="glyphicon glyphicon-th-large btn btn-default"></button>
            </a>
            <a href="@Url.Action(MVCManager.Controller.Main.AlbumAsList, MVCManager.Controller.Main.Name, new { id = Model.Id})" title="View as list">
                <button class="glyphicon glyphicon-th-list btn btn-default"></button>
            </a>
            <a href="@Url.Action(MVCManager.Controller.Main.ChangeAlbum, MVCManager.Controller.Main.Name, new { id = Model.Id})" title="Edit this album">
                <button class="glyphicon glyphicon-edit btn btn-default"></button>
            </a>
            <a href="@Url.Action(MVCManager.Controller.Main.RemoveAlbum, MVCManager.Controller.Main.Name, new { id = Model.Id,})" title="Remove this album">
                <button class="glyphicon glyphicon-remove btn btn-default"></button>
            </a>
        </div>
    </div>
</div>

@using (Html.BeginForm(MVCManager.Controller.Main.ImageLoad, MVCManager.Controller.Main.Name, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(m => m.Guid)
    <div class="content">
        <img id="joke" class="center-block" width="150px" src="~/Images/joke.gif" alt="joke">
        <div id="drop-files" ondragover="return false">
            <p>@Translation.SelectImages</p>
            <form id="frm">
                <label for="uploadbtn" class="btn btn-primary">@Translation.BrowseImages</label>
                <input type="file" name="files" id="uploadbtn" multiple="multiple" style="visibility:hidden;">
            </form>
        </div>
        <div id="uploaded-holder">
            <div id="dropped-files">
                <div id="upload-button">
                    <center>
                        <span>0 Files</span>
                        <button type="submit" class="upload btn btn-primary">@Translation.Upload</button>
                        <a href="#" class="delete btn btn-primary">@Translation.Remove</a>
                        <div id="loading">
                            <div id="loading-bar">
                                <div class="loading-color"></div>
                            </div>
                            <div id="loading-content"></div>
                        </div>
                    </center>
                </div>
            </div>
        </div>
    </div>
}
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <h3> @Model.Message</h3>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">@Translation.Close</button>
            </div>
        </div>
    </div>
</div>

@if (!string.IsNullOrWhiteSpace(Model.Message))
{
    @section Script
{
        @Scripts.Render("~/Scripts/modal/js")
    }
}
